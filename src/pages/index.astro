---
import AboutUs from '../components/About_us.astro';
import Galeria from '../components/Galeria.astro';
import Manifest from '../components/Manifest.astro';


import Layout from '../layouts/Layout.astro';


---

<Layout title="Cinenicma">










   <section class="first-section">

    Video de fondo para la página principal
    <video autoplay muted loop playsinline class="background-video">
      <source src="/videos/background.webm" type="video/mp4" />
      Tu navegador no soporta el elemento de video.
    </video>

  </section> 
  <div id="scroll-trigger" style="height: 1px; position: absolute; top: 95vh;"></div>



  
  <Manifest></Manifest>

  <div id="trigger-light" style="height:1px; position:absolute; top:95vh;"></div>
  
  <Galeria></Galeria>


  

  
  

  </Layout>


  
  
  

  <style>



    .first-section{
      width: 100vw;
      height: calc(100vh);
      overflow: hidden;
      position: relative;
    }
    
    .background-video {
     position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: cover; /* Asegura que el video cubra la pantalla sin distorsionar */
      z-index: -1; /* Permite que el contenido se muestre encima del video */
    }

   

  </style>






<script>
 document.addEventListener("DOMContentLoaded", () => {
  const trigger = document.getElementById("scroll-trigger");
  const navElement = document.querySelector(".cambio_color");
  const element = document.querySelector('.menu_cambio'); 

  if (!trigger || !navElement) {
    console.error("No se encontró el elemento #scroll-trigger o .cambio_color");
    return;
  }

  const observer = new IntersectionObserver(
    (entries) => {
      const entry = entries[0];
      if (!entry.isIntersecting) {
        navElement.classList.add("scrolled");
        element?.classList.add('scrolled_menu');
      } else {
        navElement.classList.remove("scrolled");
        element?.classList.remove('scrolled_menu');
      }
    },
    {
      root: null, // Usa el viewport como contenedor
      threshold: 0.1, // Detecta cuando el 10% del elemento es visible
    }
  );

  observer.observe(trigger);
});


</script>




  
</Layout>
